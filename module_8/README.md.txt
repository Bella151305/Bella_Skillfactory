Поставлена задача построить модель классификации изображений. Классифицировать мы будем автомобили по их фотографиям.

ЧТО НУЖНО СДЕЛАТЬ?

1. Изучить данные.
2. Построить baseline решения под руководством автора модуля.
3. На основе baseline и данных в нём рекомендаций повысить точность модели.

Основная идея решения: взять предобученую на ImageNet сеть Xception и дообучить под нашу задачу.

Рекомендации из проекта:
1. Примените transfer learning с finetuning.
2. Настройте LR, optimizer, loss.
3. Подготовка данных:
	→ Подберите другие переменные (размер картинки, батч и так далее).
	→ Попробуйте разные способы заполнения пропусков c помощью Keras ImageDataGenerator.
4. Обучение модели:
	→ Попробуйте и другие архитектуры сетей (а не только Xception) или их ансамбли. Примеры SOTA на ImageNet.
	→ Добавьте Batch Normalization и поэкспериментируйте с архитектурой «головы».
	→ Примените другие функции callback в Keras.
	→ Попробуйте поставить больше эпох для обучения.
5. Продвинутый уровень:
	→ Добавьте TTA (Test Time Augmentation).
	→ Используйте разные техники управления Learning Rate. Ещё раз перечитайте статьи на towardsdatascience и teleported.in.
	→ Добавьте более продвинутые библиотеки аугментации изображений (например, albumentations или imgaug, для которых есть специальные «обёртки» под Keras, например ImageDataAugmentor).
	→ Используйте внешние датасеты для дообучения модели.
	→ Оберните вашу модель в сервис на Flask. Рекомендуем вам выполнить этот финальный шаг, чтобы на практике отследить особенности внедрения DL-моделей в продакшн.